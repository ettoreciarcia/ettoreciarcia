                  # - template: install-redis.yml
                  #   parameters:
                  #     host: ${{ host }}
                  
                  # - template: check-installation.yml
                  #   parameters:
                  #     host: ${{ host }}
                  
                  # - template: restart-redis.yml
                  #   parameters:
                  #     host: ${{ host }}
                  
                  # - template: establish-master.yml
                  #   parameters:
                  #     host: ${{ host }}


#MAIN 

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

trigger:
 - none

pool:
  name: 'LINUX AGENT'

parameters:
- name: variableSecretsGroup
  type: string
  default: Infra-Redis-Secrets
- name: hostsALFA
  type: object
  default:
  - AZ0ALFKNGRD11C
- name: hostsCOLL
  type: object
  default:
  - VT0CLDKNGRD11
- name: hostsPROD
  type: object
  default:
  - VT0CRGKNGRD11C
  - VT0CRGKNGRD12C
  - VT0CRGKNGRD13C
- name: redisMasterNamePROD
  type: string
  default: VT0CRGKNGRD11C

stages:
  - stage: DeployToProd
    displayName: Deploy to PROD env
    pool: 'LINUX AGENT'
    jobs:
      - ${{ each host in parameters.hostsPROD }}:
        - deployment: deploy_prod_${{ host }}
          displayName: 'Deploy ${{ host }}'
          environment: INFRA_CRG_REDIS
          variables:
            - group: ${{ parameters.variableSecretsGroup }}
          workspace:
            clean: all
          strategy:
            runOnce:
              deploy:
                steps:
                  - checkout: self
                  - task: replacetokens@4
                    displayName: 'ReplaceTask'
                    inputs:
                      rootDirectory: "$(Build.SourcesDirectory)/src/config/prod"
                      targetFiles: '**/*.conf'
                      encoding: 'utf-8'
                      tokenPattern: 'default'
                      writeBOM: true
                      actionOnMissing: 'fail'
                      actionOnNoFiles: 'fail'

                  - template: cat-redis-conf.yaml
                    parameters:
                      host: ${{ host }}
                  
                  # - template: install-redis.yml
                  #   parameters:
                  #     host: ${{ host }}
                  
                  # - template: check-installation.yml
                  #   parameters:
                  #     host: ${{ host }}
                  
                  # - template: restart-redis.yml
                  #   parameters:
                  #     host: ${{ host }}
                  
                  # - template: establish-master.yml
                  #   parameters:
                  #     host: ${{ host }}}

# A questo si aggiunge la cat di una configurazione di Redis

steps:
  - task: ShellScript@2
    displayName: 'cat of redis conf'
    inputs:
      #sshEndpoint: ${{ host }}
      runOptions: 'inline'
      inline: |
        #!/bin/bash
        set -e
        echo "Cat config sentinel redis"
        sudo cat  /etc/redis/redis.conf

#Che Ã¨ il file che andremo a richiamare

